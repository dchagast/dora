---
source: crates/dora-compiler/src/dora/tests/operations.rs
expression: op
snapshot_kind: text
---
"builtin.module"() ({
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = !llvm.ptr, linkage = #llvm.linkage<internal>, sym_name = "dora_stack_ptr", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = !llvm.ptr, linkage = #llvm.linkage<internal>, sym_name = "dora_memory_ptr", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = i32, linkage = #llvm.linkage<internal>, sym_name = "dora_memory_size", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = !llvm.ptr, linkage = #llvm.linkage<internal>, sym_name = "dora_calldata_ptr", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = i32, linkage = #llvm.linkage<internal>, sym_name = "dora_calldata_size", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "llvm.mlir.global"() <{addr_space = 0 : i32, global_type = i64, linkage = #llvm.linkage<internal>, sym_name = "dora_gas_counter", visibility_ = 0 : i64}> ({
  }) : () -> ()
  "func.func"() <{function_type = (i32) -> (), sym_name = "dora_debug_print", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, i64, i8) -> (), sym_name = "dora_write_result", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr) -> (), sym_name = "dora_keccak256_hasher", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> !llvm.ptr, sym_name = "dora_get_calldata_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i32, sym_name = "dora_get_calldata_size", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i64, sym_name = "dora_get_chainid", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_callvalue_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_caller_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_gasprice_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_selfbalance_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_blobbasefee_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i64, sym_name = "dora_get_gaslimit", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32) -> !llvm.ptr, sym_name = "dora_extend_memory", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, i32) -> (), sym_name = "dora_copy_code_to_memory", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_read_storage", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> i64, sym_name = "dora_write_storage", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32) -> (), sym_name = "dora_append_log", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr) -> (), sym_name = "dora_append_log_with_one_topic", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_append_log_with_two_topics", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_append_log_with_three_topics", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_append_log_with_four_topics", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_origin", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> !llvm.ptr, sym_name = "dora_get_coinbase_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_block_number", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> i64, sym_name = "dora_get_codesize_from_address", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> !llvm.ptr, sym_name = "dora_get_address_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_prevrandao", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_timestamp_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_basefee_ptr", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i64, !llvm.ptr, !llvm.ptr, i32, i32, i32, i32, i64, !llvm.ptr, i8) -> i8, sym_name = "dora_call", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_store_in_balance", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, i32, i32, i32) -> (), sym_name = "dora_copy_ext_code_to_memory", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_blob_hash_at_index", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_block_hash", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_get_code_hash", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr) -> i8, sym_name = "dora_create", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr, !llvm.ptr) -> i8, sym_name = "dora_create2", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr) -> i32, sym_name = "dora_get_return_data_size", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i32, i32, i32) -> (), sym_name = "dora_copy_return_data_into_memory", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr) -> i64, sym_name = "dora_selfdestruct", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_transient_storage_read", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, !llvm.ptr, !llvm.ptr) -> (), sym_name = "dora_transient_storage_write", sym_visibility = "private"}> ({
  }) : () -> ()
  "func.func"() <{function_type = (!llvm.ptr, i64) -> i8, sym_name = "main", sym_visibility = "public"}> ({
  ^bb0(%arg0: !llvm.ptr, %arg1: i64):
    %0 = "arith.constant"() <{value = 1024 : i256}> : () -> i256
    %1 = "llvm.alloca"(%0) <{elem_type = i256}> : (i256) -> !llvm.ptr
    %2 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    "llvm.store"(%1, %2) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    %3 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %4 = "llvm.mlir.addressof"() <{global_name = @dora_memory_size}> : () -> !llvm.ptr
    "llvm.store"(%3, %4) <{ordering = 0 : i64}> : (i32, !llvm.ptr) -> ()
    %5 = "func.call"(%arg0) <{callee = @dora_get_calldata_ptr}> : (!llvm.ptr) -> !llvm.ptr
    %6 = "llvm.mlir.addressof"() <{global_name = @dora_calldata_ptr}> : () -> !llvm.ptr
    "llvm.store"(%5, %6) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    %7 = "func.call"(%arg0) <{callee = @dora_get_calldata_size}> : (!llvm.ptr) -> i32
    %8 = "llvm.mlir.addressof"() <{global_name = @dora_calldata_size}> : () -> !llvm.ptr
    "llvm.store"(%7, %8) <{ordering = 0 : i64}> : (i32, !llvm.ptr) -> ()
    %9 = "llvm.mlir.addressof"() <{global_name = @dora_gas_counter}> : () -> !llvm.ptr
    "llvm.store"(%arg1, %9) <{ordering = 0 : i64}> : (i64, !llvm.ptr) -> ()
    "cf.br"()[^bb3] : () -> ()
  ^bb1:  // 2 preds: ^bb2, ^bb6
    %10 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %11 = "arith.constant"() <{value = 0 : i64}> : () -> i64
    %12 = "arith.constant"() <{value = 3 : i8}> : () -> i8
    "func.call"(%arg0, %10, %10, %11, %12) <{callee = @dora_write_result}> : (!llvm.ptr, i32, i32, i64, i8) -> ()
    "func.return"(%12) : (i8) -> ()
  ^bb2(%13: i256):  // no predecessors
    "cf.switch"(%13)[^bb1] <{case_operand_segments = array<i32>, case_values = dense<> : tensor<0xi256>, operandSegmentSizes = array<i32: 1, 0, 0>}> : (i256) -> ()
  ^bb3:  // pred: ^bb0
    %14 = "arith.constant"() <{value = 0 : i256}> : () -> i256
    %15 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %16 = "llvm.load"(%15) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%14, %16) <{ordering = 0 : i64}> : (i256, !llvm.ptr) -> ()
    %17 = "llvm.getelementptr"(%16) <{elem_type = i256, rawConstantIndices = array<i32: 1>}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%17, %15) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb4] : () -> ()
  ^bb4:  // pred: ^bb3
    %18 = "arith.constant"() <{value = 0 : i256}> : () -> i256
    %19 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %20 = "llvm.load"(%19) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%18, %20) <{ordering = 0 : i64}> : (i256, !llvm.ptr) -> ()
    %21 = "llvm.getelementptr"(%20) <{elem_type = i256, rawConstantIndices = array<i32: 1>}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%21, %19) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb5] : () -> ()
  ^bb5:  // pred: ^bb4
    %22 = "arith.constant"() <{value = 9 : i256}> : () -> i256
    %23 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %24 = "llvm.load"(%23) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%22, %24) <{ordering = 0 : i64}> : (i256, !llvm.ptr) -> ()
    %25 = "llvm.getelementptr"(%24) <{elem_type = i256, rawConstantIndices = array<i32: 1>}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%25, %23) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb6] : () -> ()
  ^bb6:  // pred: ^bb5
    %26 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %27 = "llvm.load"(%26) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    %28 = "llvm.getelementptr"(%27) <{elem_type = i256, rawConstantIndices = array<i32: -1>}> : (!llvm.ptr) -> !llvm.ptr
    %29 = "llvm.load"(%28) <{ordering = 0 : i64}> : (!llvm.ptr) -> i256
    "llvm.store"(%28, %26) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    %30 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %31 = "llvm.load"(%30) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    %32 = "llvm.getelementptr"(%31) <{elem_type = i256, rawConstantIndices = array<i32: -1>}> : (!llvm.ptr) -> !llvm.ptr
    %33 = "llvm.load"(%32) <{ordering = 0 : i64}> : (!llvm.ptr) -> i256
    "llvm.store"(%32, %30) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    %34 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %35 = "llvm.load"(%34) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    %36 = "llvm.getelementptr"(%35) <{elem_type = i256, rawConstantIndices = array<i32: -1>}> : (!llvm.ptr) -> !llvm.ptr
    %37 = "llvm.load"(%36) <{ordering = 0 : i64}> : (!llvm.ptr) -> i256
    "llvm.store"(%36, %34) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    %38 = "arith.trunci"(%33) : (i256) -> i32
    %39 = "arith.trunci"(%37) : (i256) -> i32
    %40 = "arith.addi"(%38, %39) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
    %41 = "llvm.mlir.addressof"() <{global_name = @dora_memory_size}> : () -> !llvm.ptr
    %42 = "llvm.load"(%41) <{ordering = 0 : i64}> : (!llvm.ptr) -> i32
    %43 = "arith.constant"() <{value = 31 : i32}> : () -> i32
    %44 = "arith.constant"() <{value = 32 : i32}> : () -> i32
    %45 = "arith.addi"(%40, %43) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
    %46 = "arith.divui"(%45, %44) : (i32, i32) -> i32
    %47 = "arith.muli"(%46, %44) <{overflowFlags = #arith.overflow<none>}> : (i32, i32) -> i32
    %48 = "arith.cmpi"(%42, %47) <{predicate = 6 : i64}> : (i32, i32) -> i1
    "scf.if"(%48) ({
      %64 = "func.call"(%arg0, %47) <{callee = @dora_extend_memory}> : (!llvm.ptr, i32) -> !llvm.ptr
      "llvm.store"(%47, %41) <{ordering = 0 : i64}> : (i32, !llvm.ptr) -> ()
      %65 = "llvm.mlir.addressof"() <{global_name = @dora_memory_ptr}> : () -> !llvm.ptr
      "llvm.store"(%64, %65) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
      "scf.yield"() : () -> ()
    }, {
      "scf.yield"() : () -> ()
    }) : (i1) -> ()
    %49 = "arith.constant"() <{value = 1 : i256}> : () -> i256
    %50 = "llvm.alloca"(%49) <{elem_type = i256}> : (i256) -> !llvm.ptr
    "llvm.store"(%29, %50) <{alignment = 1 : i64, ordering = 0 : i64}> : (i256, !llvm.ptr) -> ()
    %51 = "llvm.mlir.addressof"() <{global_name = @dora_gas_counter}> : () -> !llvm.ptr
    %52 = "llvm.load"(%51) <{ordering = 0 : i64}> : (!llvm.ptr) -> i64
    %53 = "arith.constant"() <{value = 1 : i64}> : () -> i64
    %54 = "llvm.alloca"(%53) <{elem_type = i64}> : (i64) -> !llvm.ptr
    "llvm.store"(%52, %54) <{alignment = 1 : i64, ordering = 0 : i64}> : (i64, !llvm.ptr) -> ()
    %55 = "func.call"(%arg0, %39, %38, %50, %54) <{callee = @dora_create}> : (!llvm.ptr, i32, i32, !llvm.ptr, !llvm.ptr) -> i8
    %56 = "arith.constant"() <{value = 0 : i8}> : () -> i8
    %57 = "arith.cmpi"(%56, %55) <{predicate = 0 : i64}> : (i8, i8) -> i1
    "cf.cond_br"(%57)[^bb7, ^bb1] <{operandSegmentSizes = array<i32: 1, 0, 0>}> : (i1) -> ()
  ^bb7:  // pred: ^bb6
    %58 = "llvm.load"(%50) <{ordering = 0 : i64}> : (!llvm.ptr) -> i256
    %59 = "llvm.mlir.addressof"() <{global_name = @dora_stack_ptr}> : () -> !llvm.ptr
    %60 = "llvm.load"(%59) <{ordering = 0 : i64}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%58, %60) <{ordering = 0 : i64}> : (i256, !llvm.ptr) -> ()
    %61 = "llvm.getelementptr"(%60) <{elem_type = i256, rawConstantIndices = array<i32: 1>}> : (!llvm.ptr) -> !llvm.ptr
    "llvm.store"(%61, %59) <{ordering = 0 : i64}> : (!llvm.ptr, !llvm.ptr) -> ()
    "cf.br"()[^bb8] : () -> ()
  ^bb8:  // pred: ^bb7
    %62 = "arith.constant"() <{value = 0 : i32}> : () -> i32
    %63 = "arith.constant"() <{value = 1 : i8}> : () -> i8
    "func.call"(%arg0, %62, %62, %arg1, %63) <{callee = @dora_write_result}> : (!llvm.ptr, i32, i32, i64, i8) -> ()
    "func.return"(%63) : (i8) -> ()
  }) {llvm.emit_c_interface} : () -> ()
}) : () -> ()
